# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AS = @AS@
AWK = @AWK@
BONOBO_ACT_IDLDIR = @BONOBO_ACT_IDLDIR@
BONOBO_IDLDIR = @BONOBO_IDLDIR@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
DATADIRNAME = @DATADIRNAME@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
ESD_CFLAGS = @ESD_CFLAGS@
ESD_CONFIG = @ESD_CONFIG@
ESD_LIBS = @ESD_LIBS@
EXEEXT = @EXEEXT@
FISH_CFLAGS = @FISH_CFLAGS@
FISH_LIBS = @FISH_LIBS@
GCONFTOOL = @GCONFTOOL@
GCONF_SCHEMA_CONFIG_SOURCE = @GCONF_SCHEMA_CONFIG_SOURCE@
GCONF_SCHEMA_FILE_DIR = @GCONF_SCHEMA_FILE_DIR@
GDK_PIXBUF_REQUIRED = @GDK_PIXBUF_REQUIRED@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GLIB_GENMARSHAL = @GLIB_GENMARSHAL@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GNOME_VFS_REQUIRED = @GNOME_VFS_REQUIRED@
GTKDOC = @GTKDOC@
GTK_REQUIRED = @GTK_REQUIRED@
HAVE_GTK_DOC = @HAVE_GTK_DOC@
INSTOBJEXT = @INSTOBJEXT@
INTLLIBS = @INTLLIBS@
INTLTOOL_CAVES_RULE = @INTLTOOL_CAVES_RULE@
INTLTOOL_DESKTOP_RULE = @INTLTOOL_DESKTOP_RULE@
INTLTOOL_DIRECTORY_RULE = @INTLTOOL_DIRECTORY_RULE@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_KEYS_RULE = @INTLTOOL_KEYS_RULE@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_OAF_RULE = @INTLTOOL_OAF_RULE@
INTLTOOL_PERL = @INTLTOOL_PERL@
INTLTOOL_PONG_RULE = @INTLTOOL_PONG_RULE@
INTLTOOL_PROP_RULE = @INTLTOOL_PROP_RULE@
INTLTOOL_SCHEMAS_RULE = @INTLTOOL_SCHEMAS_RULE@
INTLTOOL_SERVER_RULE = @INTLTOOL_SERVER_RULE@
INTLTOOL_SHEET_RULE = @INTLTOOL_SHEET_RULE@
INTLTOOL_SOUNDLIST_RULE = @INTLTOOL_SOUNDLIST_RULE@
INTLTOOL_THEME_RULE = @INTLTOOL_THEME_RULE@
INTLTOOL_UI_RULE = @INTLTOOL_UI_RULE@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
INTLTOOL_XML_RULE = @INTLTOOL_XML_RULE@
LDFLAGS = @LDFLAGS@
LIBGLADE_REQUIRED = @LIBGLADE_REQUIRED@
LIBGNOME_REQUIRED = @LIBGNOME_REQUIRED@
LIBPANEL_APPLET_CFLAGS = @LIBPANEL_APPLET_CFLAGS@
LIBPANEL_APPLET_LIBS = @LIBPANEL_APPLET_LIBS@
LIBTOOL = @LIBTOOL@
LIBWNCK_REQUIRED = @LIBWNCK_REQUIRED@
LIB_PANEL_APPLET_LT_VERSION = @LIB_PANEL_APPLET_LT_VERSION@
LN_S = @LN_S@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKINSTALLDIRS = @MKINSTALLDIRS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
ORBIT_IDL = @ORBIT_IDL@
ORBIT_REQUIRED = @ORBIT_REQUIRED@
PACKAGE = @PACKAGE@
PANELCONFIG_CFLAGS = @PANELCONFIG_CFLAGS@
PANELCONFIG_LIBS = @PANELCONFIG_LIBS@
PANEL_CFLAGS = @PANEL_CFLAGS@
PANEL_LIBS = @PANEL_LIBS@
PATH_TO_XRDB = @PATH_TO_XRDB@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
PNG_LIBS = @PNG_LIBS@
POFILES = @POFILES@
POSUB = @POSUB@
PO_IN_DATADIR_FALSE = @PO_IN_DATADIR_FALSE@
PO_IN_DATADIR_TRUE = @PO_IN_DATADIR_TRUE@
RANLIB = @RANLIB@
REBUILD = @REBUILD@
SCROLLKEEPER_CONFIG = @SCROLLKEEPER_CONFIG@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
WARN_CFLAGS = @WARN_CFLAGS@
WNCKLET_CFLAGS = @WNCKLET_CFLAGS@
WNCKLET_LIBS = @WNCKLET_LIBS@
XINERAMA_LIBS = @XINERAMA_LIBS@
XSHAPE_LIBS = @XSHAPE_LIBS@
X_LIBS = @X_LIBS@
cxxflags_set = @cxxflags_set@

INCLUDES =  	-I$(top_builddir)/libpanel-applet				-DPANEL_APPLET_DATADIR=\""$(datadir)"\"				-DPANEL_APPLET_GLADEDIR=\""$(gladedir)"\"			-DGNOMELOCALEDIR=\""$(prefix)/$(DATADIRNAME)/locale"\"		$(LIBPANEL_APPLET_CFLAGS)					$(WARN_CFLAGS)


lib_LTLIBRARIES = libpanel-applet-2.la

libpanel_applet_2_la_SOURCES =  	panel-applet.h				panel-applet.c				panel-applet-gconf.c			panel-applet-gconf.h			panel-applet-shell.c			panel-applet-shell.h			panel-applet-private.h			panel-applet-marshal.c			panel-applet-marshal.h			panel-applet-enums.c			panel-applet-enums.h			$(CORBA_SRCLIST)


libpanel_applet_2_la_LDFLAGS = -version-info $(LIB_PANEL_APPLET_LT_VERSION)
libpanel_applet_2_la_LIBADD = $(LIBPANEL_APPLET_LIBS)

libpanel_appletincludedir = $(includedir)/panel-2.0

libpanel_appletinclude_HEADERS =  	panel-applet-gconf.h			panel-applet.h				GNOME_Panel.h


CORBA_SRCLIST =  	GNOME_Panel-stubs.c		GNOME_Panel-skels.c		GNOME_Panel-common.c		GNOME_Panel.h


noinst_PROGRAMS = test-bonobo-applet

bin_PROGRAMS = panel-test-applets

panel_test_applets_LDADD =  	$(LIBPANEL_APPLET_LIBS)			libpanel-applet-2.la


test_bonobo_applet_LDADD =  	$(LIBPANEL_APPLET_LIBS)			libpanel-applet-2.la


BUILT_SOURCES =  	$(CORBA_SRCLIST)		panel-applet-enums.c		panel-applet-enums.h		panel-applet-marshal.c		panel-applet-marshal.h


EXTRA_DIST =  	GNOME_Panel_TestApplet.server.in		panel-applet-marshal.list			libpanelapplet-2.0.pc.in			panel-test-applets.glade


panel_applet_enum_headers = $(top_srcdir)/libpanel-applet/panel-applet.h

gladedir = $(datadir)/gnome-panel/glade
glade_DATA = panel-test-applets.glade

pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libpanelapplet-2.0.pc

CLEANFILES = $(BUILT_SOURCES)

serverdir = $(libdir)/bonobo/servers
server_in_files = GNOME_Panel_TestApplet.server.in
noinst_DATA = $(server_in_files:.server.in=.server)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES =  libpanelapplet-2.0.pc
LTLIBRARIES =  $(lib_LTLIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
LIBS = @LIBS@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
libpanel_applet_2_la_DEPENDENCIES = 
libpanel_applet_2_la_OBJECTS =  panel-applet.lo panel-applet-gconf.lo \
panel-applet-shell.lo panel-applet-marshal.lo panel-applet-enums.lo \
GNOME_Panel-stubs.lo GNOME_Panel-skels.lo GNOME_Panel-common.lo
bin_PROGRAMS =  panel-test-applets$(EXEEXT)
noinst_PROGRAMS =  test-bonobo-applet$(EXEEXT)
PROGRAMS =  $(bin_PROGRAMS) $(noinst_PROGRAMS)

panel_test_applets_SOURCES = panel-test-applets.c
panel_test_applets_OBJECTS =  panel-test-applets.$(OBJEXT)
panel_test_applets_DEPENDENCIES =  libpanel-applet-2.la
panel_test_applets_LDFLAGS = 
test_bonobo_applet_SOURCES = test-bonobo-applet.c
test_bonobo_applet_OBJECTS =  test-bonobo-applet.$(OBJEXT)
test_bonobo_applet_DEPENDENCIES =  libpanel-applet-2.la
test_bonobo_applet_LDFLAGS = 
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DATA =  $(glade_DATA) $(noinst_DATA) $(pkgconfig_DATA)

HEADERS =  $(libpanel_appletinclude_HEADERS)

DIST_COMMON =  ChangeLog Makefile.am Makefile.in TODO \
libpanelapplet-2.0.pc.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(libpanel_applet_2_la_SOURCES) panel-test-applets.c test-bonobo-applet.c
OBJECTS = $(libpanel_applet_2_la_OBJECTS) panel-test-applets.$(OBJEXT) test-bonobo-applet.$(OBJEXT)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj .s
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps libpanel-applet/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

libpanelapplet-2.0.pc: $(top_builddir)/config.status libpanelapplet-2.0.pc.in
	cd $(top_builddir) && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

mostlyclean-libLTLIBRARIES:

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)

distclean-libLTLIBRARIES:

maintainer-clean-libLTLIBRARIES:

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libpanel-applet-2.la: $(libpanel_applet_2_la_OBJECTS) $(libpanel_applet_2_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(libpanel_applet_2_la_LDFLAGS) $(libpanel_applet_2_la_OBJECTS) $(libpanel_applet_2_la_LIBADD) $(LIBS)

mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

mostlyclean-noinstPROGRAMS:

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

distclean-noinstPROGRAMS:

maintainer-clean-noinstPROGRAMS:

panel-test-applets$(EXEEXT): $(panel_test_applets_OBJECTS) $(panel_test_applets_DEPENDENCIES)
	@rm -f panel-test-applets$(EXEEXT)
	$(LINK) $(panel_test_applets_LDFLAGS) $(panel_test_applets_OBJECTS) $(panel_test_applets_LDADD) $(LIBS)

test-bonobo-applet$(EXEEXT): $(test_bonobo_applet_OBJECTS) $(test_bonobo_applet_DEPENDENCIES)
	@rm -f test-bonobo-applet$(EXEEXT)
	$(LINK) $(test_bonobo_applet_LDFLAGS) $(test_bonobo_applet_OBJECTS) $(test_bonobo_applet_LDADD) $(LIBS)

install-gladeDATA: $(glade_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(gladedir)
	@list='$(glade_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(gladedir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(gladedir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(gladedir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(gladedir)/$$p; \
	  fi; fi; \
	done

uninstall-gladeDATA:
	@$(NORMAL_UNINSTALL)
	list='$(glade_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(gladedir)/$$p; \
	done

install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgconfigdir)
	@list='$(pkgconfig_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(pkgconfigdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(pkgconfigdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(pkgconfigdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(pkgconfigdir)/$$p; \
	  fi; fi; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	list='$(pkgconfig_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(pkgconfigdir)/$$p; \
	done

install-libpanel_appletincludeHEADERS: $(libpanel_appletinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libpanel_appletincludedir)
	@list='$(libpanel_appletinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d= ; else d="$(srcdir)/"; fi; \
	  echo " $(INSTALL_DATA) $$d$$p $(DESTDIR)$(libpanel_appletincludedir)/$$p"; \
	  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(libpanel_appletincludedir)/$$p; \
	done

uninstall-libpanel_appletincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	list='$(libpanel_appletinclude_HEADERS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(libpanel_appletincludedir)/$$p; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = libpanel-applet

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) top_distdir="$(top_distdir)" distdir="$(distdir)" dist-hook
GNOME_Panel-common.lo GNOME_Panel-common.o : GNOME_Panel-common.c \
	GNOME_Panel.h
GNOME_Panel-skels.lo GNOME_Panel-skels.o : GNOME_Panel-skels.c \
	GNOME_Panel.h
GNOME_Panel-stubs.lo GNOME_Panel-stubs.o : GNOME_Panel-stubs.c \
	GNOME_Panel.h
panel-applet-enums.lo panel-applet-enums.o : panel-applet-enums.c \
	panel-applet-enums.h panel-applet.h GNOME_Panel.h
panel-applet-gconf.lo panel-applet-gconf.o : panel-applet-gconf.c \
	panel-applet-gconf.h panel-applet.h GNOME_Panel.h \
	panel-applet-private.h
panel-applet-marshal.lo panel-applet-marshal.o : panel-applet-marshal.c \
	panel-applet-marshal.h
panel-applet-shell.lo panel-applet-shell.o : panel-applet-shell.c \
	../config.h panel-applet-shell.h panel-applet.h GNOME_Panel.h \
	panel-applet-private.h
panel-applet.lo panel-applet.o : panel-applet.c ../config.h \
	panel-applet.h GNOME_Panel.h panel-applet-private.h \
	panel-applet-shell.h panel-applet-marshal.h \
	panel-applet-enums.h
panel-test-applets.o: panel-test-applets.c ../config.h panel-applet.h \
	GNOME_Panel.h
test-bonobo-applet.o: test-bonobo-applet.c ../config.h panel-applet.h \
	GNOME_Panel.h

info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-libLTLIBRARIES install-binPROGRAMS
install-exec: install-exec-am

install-data-am: install-gladeDATA install-pkgconfigDATA \
		install-libpanel_appletincludeHEADERS
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-libLTLIBRARIES uninstall-binPROGRAMS \
		uninstall-gladeDATA uninstall-pkgconfigDATA \
		uninstall-libpanel_appletincludeHEADERS
uninstall: uninstall-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(libdir) $(DESTDIR)$(bindir) \
		$(DESTDIR)$(gladedir) $(DESTDIR)$(pkgconfigdir) \
		$(DESTDIR)$(libpanel_appletincludedir)


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean-am:  mostlyclean-libLTLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-binPROGRAMS \
		mostlyclean-noinstPROGRAMS mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-libLTLIBRARIES clean-compile clean-libtool \
		clean-binPROGRAMS clean-noinstPROGRAMS clean-tags \
		clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-libLTLIBRARIES distclean-compile \
		distclean-libtool distclean-binPROGRAMS \
		distclean-noinstPROGRAMS distclean-tags \
		distclean-generic clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-libLTLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-binPROGRAMS \
		maintainer-clean-noinstPROGRAMS maintainer-clean-tags \
		maintainer-clean-generic distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-libLTLIBRARIES distclean-libLTLIBRARIES \
clean-libLTLIBRARIES maintainer-clean-libLTLIBRARIES \
uninstall-libLTLIBRARIES install-libLTLIBRARIES mostlyclean-compile \
distclean-compile clean-compile maintainer-clean-compile \
mostlyclean-libtool distclean-libtool clean-libtool \
maintainer-clean-libtool mostlyclean-binPROGRAMS distclean-binPROGRAMS \
clean-binPROGRAMS maintainer-clean-binPROGRAMS uninstall-binPROGRAMS \
install-binPROGRAMS mostlyclean-noinstPROGRAMS distclean-noinstPROGRAMS \
clean-noinstPROGRAMS maintainer-clean-noinstPROGRAMS \
uninstall-gladeDATA install-gladeDATA uninstall-pkgconfigDATA \
install-pkgconfigDATA uninstall-libpanel_appletincludeHEADERS \
install-libpanel_appletincludeHEADERS tags mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
install-exec install-data-am install-data install-am install \
uninstall-am uninstall all-redirect all-am all installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


$(CORBA_SRCLIST): $(top_srcdir)/idl/GNOME_Panel.idl $(ORBIT_IDL)
	$(ORBIT_IDL) -I $(BONOBO_IDLDIR) -I $(BONOBO_ACT_IDLDIR) $(top_srcdir)/idl/GNOME_Panel.idl

$(libpanel_applet_2_la_OBJECTS) $(test_bonobo_applet_OBJECTS): $(BUILT_SOURCES)

panel-applet-marshal.h: panel-applet-marshal.list $(GLIB_GENMARSHAL)
	$(GLIB_GENMARSHAL) $< --header --prefix=panel_applet_marshal > $@

panel-applet-marshal.c: panel-applet-marshal.list $(GLIB_GENMARSHAL)
	echo "#include \"panel-applet-marshal.h\"" > $@ && \
	$(GLIB_GENMARSHAL) $< --body --prefix=panel_applet_marshal >> $@

panel-applet-enums.c: @REBUILD@ $(panel_applet_enum_headers)
	glib-mkenums --fhead "#include <glib-object.h>\n" \
		     --fhead "#include \"panel-applet-enums.h\"\n\n" \
		     --fprod "\n/* enumerations from \"@filename@\" */" \
		     --fprod "\n#include \"@filename@\"\n" \
		     --vhead "static const G@Type@Value _@enum_name@_values[] = {" \
		     --vprod "  { @VALUENAME@, \"@VALUENAME@\", \"@valuenick@\" }," \
		     --vtail "  { 0, NULL, NULL }\n};\n\n" \
		     --vtail "GType\n@enum_name@_get_type (void)\n{\n" \
		     --vtail "  static GType type = 0;\n\n" \
		     --vtail "  if (!type)\n" \
		     --vtail "    type = g_@type@_register_static (\"@EnumName@\", _@enum_name@_values);\n\n" \
		     --vtail "  return type;\n}\n\n" \
		$(panel_applet_enum_headers) > $@

panel-applet-enums.h: @REBUILD@ $(panel_applet_enum_headers)
	glib-mkenums --fhead "#ifndef __PANEL_APPLET_ENUMS_H__\n" \
		     --fhead "#define __PANEL_APPLET_ENUMS_H__\n\n" \
		     --fhead "G_BEGIN_DECLS\n\n" \
		     --ftail "G_END_DECLS\n\n" \
		     --ftail "#endif /* __PANEL_APPLET_ENUMS_H__ */\n" \
		     --fprod "\n/* --- @filename@ --- */" \
		     --eprod "#define PANEL_TYPE_@ENUMNAME@ @enum_name@_get_type()\n" \
		     --eprod "GType @enum_name@_get_type (void);\n" \
		$(panel_applet_enum_headers) > $@

@INTLTOOL_SERVER_RULE@

dist-hook:
	cd $(distdir) ; rm -f $(CLEANFILES)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
